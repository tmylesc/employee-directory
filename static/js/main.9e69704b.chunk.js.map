{"version":3,"sources":["utils/EmployeeContext.js","utils/API.js","components/EmployeeBody.js","components/EmployeeGrid.js","components/SearchName.js","components/Nav.js","components/EmployeeArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["EmployeeContext","React","createContext","axios","get","EmployeeBody","context","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","date","dateArray","split","year","join","formatDOB","EmployeeGrid","headings","width","style","onClick","handleSort","SearchName","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","console","log","data","Provider","value","event","filter","target","filteredList","item","values","toLowerCase","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","age","updatedHeadings","length","Main","EmployeeArea","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e69704b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EmployeeContext = React.createContext({\n\n});\n\nexport default EmployeeContext;","import axios from \"axios\";\n\nexport default {\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n};\n","import React, { useContext } from \"react\";\nimport EmployeeContext from \"../utils/EmployeeContext\";\n\nconst EmployeeBody = () => {\n  const context = useContext(EmployeeContext);\n\n  function formatDOB(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  }\n\n  return (\n    <tbody>\n      {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\n        context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\n          return (\n            <tr key={login.uuid}>\n              <td data-th=\"Photo\" className=\"align-middle\">\n                <img src={picture.medium} alt={name.first + name.last} className=\"img-responsive\"/>\n              </td>\n              <td data-th=\"Name\" className=\"align-middle\">\n                {name.first} {name.last}\n              </td>\n              <td data-th=\"Phone\" className=\"align-middle\">\n                {phone}\n              </td>\n              <td data-th=\"Email\" className=\"align-middle\">\n                {email}\n              </td>\n              <td data-th=\"DOB\" className=\"align-middle\">\n                {formatDOB(dob.date)}\n              </td>\n            </tr>\n          );\n        })\n      ) : (\n        <></>\n      )}\n    </tbody>\n  );\n}\n\nexport default EmployeeBody;\n","import React, { useContext } from \"react\";\nimport EmployeeContext from \"../utils/EmployeeContext\";\nimport EmployeeBody from \"./EmployeeBody\";\n\nconst EmployeeGrid = () => {\n  const context = useContext(EmployeeContext);\n\n  return (\n    <div>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            {context.developerState.headings.map(({ name, width }) => {\n              return (\n                <th className=\"col\" key={name} style={{ width }}\n                  onClick={() => {\n                    context.handleSort(name);\n                  }}\n                >\n                  {name}\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n\n        <EmployeeBody />\n      </table>\n    </div>\n  );\n}\n\nexport default EmployeeGrid;\n","import React, { useContext } from \"react\";\nimport EmployeeContext from \"../utils/EmployeeContext\";\n\nconst SearchName = () => {\n  const context = useContext(EmployeeContext);\n\n  return (\n    <div className=\"searchbox\">\n      <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">\n              Search\n            </span>\n          </div>\n          <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Name\"\n          aria-label=\"Search\"\n          onChange={e => context.handleSearchChange(e)}\n        />\n        </div>\n    </div>\n  );\n}\nexport default SearchName;\n","import React from \"react\";\nimport SearchName from \"./SearchName.js\";\n\nfunction Nav() {\n  return (\n        <div className=\"search-area col-4\">\n          <SearchName />\n        </div>\n  );\n}\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\n\nimport EmployeeContext from \"../utils/EmployeeContext\";\nimport API from \"../utils/API\";\n\nimport EmployeeGrid from \"./EmployeeGrid\";\nimport Nav from \"./Nav\";\n\nconst DataArea = () => {\n  const [developerState, setDeveloperState] = useState({\n    users: [],\n    order: \"descend\",\n    filteredUsers: [],\n    headings: [\n      { name: \"Image\", width: \"10%\", order: \"descend\" },\n      { name: \"name\", width: \"10%\", order: \"descend\" },\n      { name: \"phone\", width: \"10%\", order: \"descend\" },\n      { name: \"email\", width: \"10%\", order: \"descend\" },\n      { name: \"dob\", width: \"10%\", order: \"descend\" }\n    ]\n  });\n\n  const handleSort = heading => {\n    let currentOrder = developerState.headings\n      .filter(elem => elem.name === heading)\n      .map(elem => elem.order)\n      .toString();\n\n    if (currentOrder === \"descend\") {\n      currentOrder = \"ascend\";\n    } else {\n      currentOrder = \"descend\";\n    }\n\n    const compare = (a, b) => {\n      if (currentOrder === \"ascend\") {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        else if (heading === \"name\") {\n          return a[heading].first.localeCompare(b[heading].first);\n        } else if (heading === \"dob\") {\n          return a[heading].age - b[heading].age;\n        } else {\n          return a[heading].localeCompare(b[heading]);\n        }\n      } else {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        else if (heading === \"name\") {\n          return b[heading].first.localeCompare(a[heading].first);\n        }else if (heading === \"dob\") {\n          return b[heading].age - a[heading].age;\n        }  else {\n          return b[heading].localeCompare(a[heading]);\n        }\n      }\n    };\n\n    const sortedUsers = developerState.filteredUsers.sort(compare);\n\n    const updatedHeadings = developerState.headings.map(elem => {\n      elem.order = elem.name === heading ? currentOrder : elem.order;\n      return elem;\n    });\n\n    setDeveloperState({\n      ...developerState,\n      filteredUsers: sortedUsers,\n      headings: updatedHeadings\n    });\n  };\n\n  const handleSearchChange = event => {\n    const filter = event.target.value;\n    const filteredList = developerState.users.filter(item => {\n      let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\n      console.log(filter, values)\n    if(values.indexOf(filter.toLowerCase()) !== -1){\n      return item\n    };\n    });\n\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\n  };\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n      console.log(results.data.results);\n      setDeveloperState({\n        ...developerState,\n        users: results.data.results,\n        filteredUsers: results.data.results\n      });\n    });\n  }, []);\n\n  return (\n    <EmployeeContext.Provider value={{ developerState, handleSearchChange, handleSort }}>\n      <Nav />\n      <div>\n        {developerState.filteredUsers.length > 0 ? <EmployeeGrid /> : <div></div>}\n      </div>\n    </EmployeeContext.Provider>\n  );\n};\n\nexport default DataArea;\n","import React from \"react\";\nimport EmployeeArea from \"./EmployeeArea\";\n\nfunction Main () {\n    return (\n      <>\n        <EmployeeArea />\n      </>\n    );\n  };\n\nexport default Main;\n","import React from 'react';\n\nfunction Wrapper({ children }) {\n  return (\n      <div className=\"wrapper\">\n        { children }\n      </div>\n  );\n}\n\nexport default Wrapper;\n","import React from 'react';\n\nfunction Header () {\n    return (\n      <div className=\"jumbotron text-center\">\n        <h1>Employee Directory</h1>\n      </div>\n    )\n  }\n\nexport default Header;\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}